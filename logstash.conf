input {
  file {
    codec => multiline {
      	# Grok pattern names are valid! :)
      	pattern => "^%{TIMESTAMP_ISO8601} "
      	negate => true
      	what => previous
    }
    path => [ "/var/log/escrow/escrow-logback.log" ]
    add_field => { "app_name" => "escrow-ose" }
    sincedb_path => "/opt/logstash-1.4.1/tmp"
  }
}

filter {
    # http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/
    # grok debugger - http://grokdebug.herokuapp.com/
    grok {
      patterns_dir => "/etc/logstash/patterns"
	  # For logging message emited by com.pearson.grid.registrar.commonutils.logging.LoggingMessageObserver in registrar-common-utils 1.1.16 or later - remote_host is added.
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level} %{JAVACLASS:package} \[%{JAVAFILE:file}:%{INT:line}\] %{RESTMETHOD:method} %{INT:status_code} %{INT:time_taken}ms remote_host=%{HOST:remote_host} %{DATA:response}$"]
      # For logging message emited by com.pearson.grid.registrar.commonutils.logging.LoggingMessageObserver in registrar-common-utils 1.1.5 or later.
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level} %{JAVACLASS:package} \[%{JAVAFILE:file}:%{INT:line}\] %{RESTMETHOD:method} %{INT:status_code} %{INT:time_taken}ms %{DATA:response}$"]
      # For logging message emited by com.pearson.grid.registrar.commonutils.logging.LoggingMessageObserver in registrar-common-utils 1.1.4 or prior.
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level} %{JAVACLASS:package} \[%{JAVAFILE:file}:%{INT:line}\] %{RESTMETHOD:method} %{DATA:response} %{INT:time_taken}ms$"]
      # For all the rest.
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level} %{JAVACLASS:package} \[%{JAVAFILE:file}:%{INT:line}\] %{DATA:response}$"]
    }
    mutate {
      convert => [
        "time_taken", "integer"
      ]
    }
}

output {
  elasticsearch {
    host => "registrarlog.stg-prsn.com"
    port => "8080"
    protocol => "http"
    cluster => "elasticsearch"
    template => "/etc/logstash/logstash-template.json"
  }
}
